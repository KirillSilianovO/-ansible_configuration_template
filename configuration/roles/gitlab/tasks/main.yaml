---

- name: Directories created
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "root"
    group: "root"
    mode: "0755"
  with_items:
    - "{{ gitlab_dir }}"
    - "{{ gitlab_config_dir }}"
    - "{{ gitlab_logs_dir }}"
    - "{{ gitlab_data_dir }}"
    - "{{ gitlab_runner_app_dir }}"
    - "{{ gitlab_runner_config_dir }}"
  become: true

- name: Gitlab config file created
  ansible.builtin.template:
    src: gitlab.rb.j2
    dest: "{{ gitlab_config_dir }}/gitlab.rb"
    owner: "root"
    group: "root"
    mode: "0644"
  become: true
  register: gitlab_config

- name: Gitlab cotainer started
  community.docker.docker_container:
    name: gitlab
    image: "{{ gitlab_image }}"
    pull: true
    restart_policy: unless-stopped
    detach: true
    state: started
    mounts:
      - type: bind
        source: "{{ gitlab_dir }}/omnibus_config.rb"
        target: "{{ gitlab_config_override }}"
      - type: bind
        source: "{{ gitlab_config_dir }}"
        target: /etc/gitlab
      - type: bind
        source: "{{ gitlab_logs_dir }}"
        target: /var/log/gitlab
      - type: bind
        source: "{{ gitlab_data_dir }}"
        target: /var/opt/gitlab
    labels:
      traefik.enable: "true"
      traefik.http.routers.gitlab.rule: "Host(`{{ gitlab_host }}`)"
      traefik.http.routers.gitlab.tls: "true"
      traefik.http.routers.gitlab.tls.certresolver: letsEncryptResolver
      traefik.http.routers.gitlab.entrypoints: websecure
      traefik.http.middlewares.redirect-gitlab.redirectscheme.scheme: "https"
      traefik.http.middlewares.redirect-gitlab.redirectscheme.permanent: "true"
      traefik.http.routers.gitlab-unsec.middlewares: redirect-gitlab
      traefik.http.routers.gitlab-unsec.entrypoints: web
      traefik.http.routers.gitlab-unsec.rule: "Host(`{{ gitlab_host }}`)"
      traefik.http.services.gitlab.loadbalancer.server.port: "80"
      traefik.tcp.routers.gitlab-ssh.rule: HostSNI(`*`)
      traefik.tcp.routers.gitlab-ssh.entrypoints: gitSSH

      traefik.tcp.routers.gitlab-ssh.service: gitlab@docker


- name: "GitLab Runner container started"
  community.docker.docker_container:
    name: gitlab-runner
    image: "{{ gitlab_runner_image }}"
    pull: true
    restart_policy: unless-stopped
    detach: true
    restart: true
    recreate: true
    mounts:
      - type: bind
        source: "{{ gitlab_runner_config_dir }}"
        target: /etc/gitlab-runner
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock

- name: "Gitlab Networks create"
  community.docker.docker_network:
    name: gitlab
    connected:
      - gitlab
      - gitlab-runner
  changed_when: false
